basePath: /
definitions:
  booking.CreateTicketReq:
    properties:
      additional_info:
        type: string
      flight_id:
        type: string
      passenger_id:
        type: string
    type: object
  booking.Ticket:
    properties:
      additional_info:
        type: string
      arrival_time:
        type: string
      booking_time:
        type: string
      departure_time:
        type: string
      flight_id:
        type: string
      id:
        type: string
      passenger_id:
        type: string
      seat_number:
        type: string
      status:
        description: '"booked", "cancelled", "confirmed"'
        type: string
    type: object
  flights.CreateFlightReq:
    properties:
      airline:
        type: string
      arrival:
        type: string
      departure:
        type: string
      destination:
        type: string
      origin:
        type: string
      price:
        type: number
    type: object
  flights.Flight:
    description: Flight model for API response.
    properties:
      airline:
        type: string
      arrival:
        type: string
      departure:
        type: string
      destination:
        type: string
      id:
        type: string
      origin:
        type: string
      price:
        type: number
    type: object
  passenger.CreatePassengerReq:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
  passenger.Passenger:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
    type: object
host: localhost:8010
info:
  contact: {}
  description: API Server for booking flight tickets
  title: Flight Ticket Service
  version: "1.0"
paths:
  /api/v1/{ticketID}/change:
    post:
      consumes:
      - application/json
      description: Changes the flight associated with a ticket to a new flight using
        the ticket ID and new flight ID.
      parameters:
      - description: The ID of the ticket to update
        in: path
        name: ticketID
        required: true
        type: string
      - description: The new flight ID to associate with the ticket
        in: query
        name: newFlightID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Flight successfully changed for the ticket
        "400":
          description: Invalid parameters
        "404":
          description: Ticket not found or cannot change flight for a cancelled ticket
      summary: Change the flight of a ticket
      tags:
      - booking
  /api/v1/flights:
    get:
      consumes:
      - application/json
      description: get flights
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/flights.Flight'
            type: array
      summary: Get list of flights
      tags:
      - flights
  /api/v1/flights/{id}:
    get:
      consumes:
      - application/json
      description: Gets flight details for a specific flight ID.
      parameters:
      - description: Unique identifier of the flight
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/flights.Flight'
        "404":
          description: Flight not found
      summary: Get flight by ID
      tags:
      - flights
  /api/v1/flights/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a flight by unique identifier
      parameters:
      - description: Unique identifier of the flight
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Passenger deleted
        "404":
          description: Passenger not found
      summary: Delete flight
      tags:
      - flights
  /api/v1/flights/{id}/update:
    post:
      consumes:
      - application/json
      description: Update an existing flight's details.
      parameters:
      - description: Unique identifier of the flight
        in: path
        name: id
        required: true
        type: string
      - description: User name
        in: query
        name: name
        required: true
        type: string
      - description: User surname
        in: query
        name: surname
        required: true
        type: string
      - description: User email
        in: query
        name: email
        required: true
        type: string
      - description: User password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Flight updated
        "404":
          description: Flight not found
      summary: Update flight data
      tags:
      - flights
  /api/v1/flights/create:
    post:
      consumes:
      - application/json
      description: Creates new flight profile
      parameters:
      - description: Flight data
        in: body
        name: flight
        required: true
        schema:
          $ref: '#/definitions/flights.CreateFlightReq'
      produces:
      - application/json
      responses:
        "200":
          description: Flight created
        "400":
          description: Invalid flight data
      summary: Creates flight
      tags:
      - flights
  /api/v1/flights/search:
    get:
      consumes:
      - application/json
      description: Retrieves a list of flights filtered by the provided search parameters.
      parameters:
      - description: Origin location of the flight
        in: query
        name: origin
        type: string
      - description: Destination location of the flight
        in: query
        name: destination
        type: string
      - description: Departure date and time
        in: query
        name: departure
        type: string
      - description: Arrival date and time
        in: query
        name: arrival
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/flights.Flight'
            type: array
        "404":
          description: No flights found matching the search criteria
      summary: Search flights by parameters
      tags:
      - flights
  /api/v1/passengers:
    get:
      consumes:
      - application/json
      description: get passengers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/passenger.Passenger'
            type: array
      summary: Get list of passengers
      tags:
      - passengers
  /api/v1/passengers/{id}:
    get:
      consumes:
      - application/json
      description: Gets passenger details for a specific passenger ID.
      parameters:
      - description: Unique identifier of the passenger
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/passenger.Passenger'
        "404":
          description: Missing required parameters
      summary: Get passenger by ID
      tags:
      - passengers
  /api/v1/passengers/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a passenger by their unique identifier
      parameters:
      - description: Unique identifier of the passenger
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Passenger deleted
        "404":
          description: Passenger not found
      summary: Delete passenger
      tags:
      - passengers
  /api/v1/passengers/{id}/update:
    post:
      consumes:
      - application/json
      description: Update an existing passenger's details.
      parameters:
      - description: Unique identifier of the passenger
        in: path
        name: id
        required: true
        type: string
      - description: User name
        in: query
        name: name
        required: true
        type: string
      - description: User surname
        in: query
        name: surname
        required: true
        type: string
      - description: User email
        in: query
        name: email
        required: true
        type: string
      - description: User password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Passenger updated
        "404":
          description: Passenger not found
      summary: Update passenger data
      tags:
      - passengers
  /api/v1/passengers/create:
    post:
      consumes:
      - application/json
      description: Creates new passenger profile
      parameters:
      - description: Passenger data
        in: body
        name: passenger
        required: true
        schema:
          $ref: '#/definitions/passenger.CreatePassengerReq'
      produces:
      - application/json
      responses:
        "200":
          description: Passenger created
        "400":
          description: Invalid passenger data
      summary: Creates passenger
      tags:
      - passengers
  /api/v1/tickets:
    get:
      consumes:
      - application/json
      description: get tickets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/booking.Ticket'
            type: array
      summary: Get list of tickets
      tags:
      - tickets
  /api/v1/tickets/{id}:
    get:
      consumes:
      - application/json
      description: Returns ticket details for a specific ticket ID.
      parameters:
      - description: Unique identifier of the ticket
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/booking.Ticket'
        "404":
          description: ticket not found
      summary: Get ticket by ID
      tags:
      - tickets
  /api/v1/tickets/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Deletes a ticket using the ticket ID.
      parameters:
      - description: Unique identifier of the ticket
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ticket successfully deleted
        "404":
          description: Ticket not found
      summary: Delete a ticket
      tags:
      - tickets
  /api/v1/tickets/{id}/update:
    post:
      consumes:
      - application/json
      description: Updates the details of a ticket using the ticket ID.
      parameters:
      - description: Unique identifier of the ticket
        in: path
        name: id
        required: true
        type: string
      - description: Updated ticket data
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/booking.Ticket'
      produces:
      - application/json
      responses:
        "200":
          description: Ticket successfully updated
        "400":
          description: Invalid ticket data
        "404":
          description: Ticket not found
      summary: Update ticket details
      tags:
      - tickets
  /api/v1/tickets/{ticketID}/cancel:
    post:
      consumes:
      - application/json
      description: Cancels an existing ticket using the ticket ID.
      parameters:
      - description: The ID of the ticket to cancel
        in: path
        name: ticketID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ticket successfully cancelled
        "404":
          description: Ticket not found
      summary: Cancel an existing ticket
      tags:
      - booking
  /api/v1/tickets/book:
    post:
      consumes:
      - application/json
      description: Creates a new ticket booking for a flight.
      parameters:
      - description: Ticket data
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/booking.CreateTicketReq'
      produces:
      - application/json
      responses:
        "200":
          description: Ticket successfully booked
        "400":
          description: Invalid ticket data
      summary: Book a new ticket
      tags:
      - booking
  /api/v1/tickets/create:
    post:
      consumes:
      - application/json
      description: Creates new ticket
      parameters:
      - description: Ticket data
        in: body
        name: flight
        required: true
        schema:
          $ref: '#/definitions/booking.CreateTicketReq'
      produces:
      - application/json
      responses:
        "200":
          description: Ticket created
        "400":
          description: Invalid ticket data
      summary: Creates ticket
      tags:
      - tickets
swagger: "2.0"
